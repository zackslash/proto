syntax = "proto3";

package events;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "ftypes/fortifi.proto";
import "ftypes/finance.proto";
import "ftypes/traffic.proto";
import "ftypes/communication.proto";
import "ftypes/device.proto";
import "ftypes/domain.proto";

message EventDetail {
  google.protobuf.Timestamp timestamp = 1;
  string device_id = 2;
  string advcanced_device_id = 3;
  string app = 4;//domain / app-id
  string customer_id = 5;
  string ip = 6;
  map<string,string> meta = 7;
}

message ViewedEvent {
  EventDetail detail = 1;
  string entity = 2; //Either FID or Unique Item e.g. URL
}

message OpenedEvent {
  EventDetail detail = 1;
  string entity = 2; //Either FID or Unique Item e.g. URL
}

message ImpressionEvent {
  EventDetail detail = 1;
  fortifi.traffic.CampaignDetails campaign = 2; //e.g. source=advertiser,id=campaign-id,medium=banner
  fortifi.traffic.TrackingDetails tracking = 3;
  string creative = 4;//Banner ID
}

message LinkEvent {
  EventDetail detail = 1;
  fortifi.traffic.CampaignDetails campaign = 2; //e.g. source=advertiser,id=campaign-id,medium=banner
  fortifi.traffic.TrackingDetails tracking = 3;
  fortifi.traffic.LinkType type = 4;
}

message ConversionEvent {
  EventDetail detail = 1;
  fortifi.traffic.CampaignDetails campaign = 2; //e.g. source=advertiser,id=campaign-id,medium=banner
  fortifi.traffic.TrackingDetails tracking = 3;
  fortifi.finance.Transaction transaction = 4;
  string action = 5;
}

message InstallationEvent {
  EventDetail detail = 1;
  fortifi.traffic.CampaignDetails campaign = 2; //e.g. source=advertiser,id=campaign-id,medium=banner
  fortifi.traffic.TrackingDetails tracking = 3;
  fortifi.device.InstallAction type = 4;
  string app_id = 5;
  string version = 6;
  fortifi.device.OperatingSystem device_os = 7;
  fortifi.device.DeviceType device_type = 8;
  string device_manufacturer = 9;//e.g. Apple, Microsoft, Samsung
  string device = 10;//e.g. iPad, Nexus 5, Laptop, Desktop
  string device_version = 11;
}

message CommunicationEvent {
  EventDetail detail = 1;
  fortifi.ftypes.Direction direction = 2;
  fortifi.communication.CommunicationMethod method = 3;
  string provider = 4;
  string initiator = 5;
  string receiver = 6;
  google.protobuf.Duration duration = 7;
  string subject = 8;
}

message SubscriptionEvent {
  EventDetail detail = 1;
  string entity = 2; //e.g. newsletter id
  fortifi.communication.SubscriptionAction action = 3;
}

message EntityRateEvent {
  enum RateStyle {
    ONE_FIVE = 0;//1-5
    ONE_TEN = 1;//1-10
    YES_NO = 2;//Y/N
    ONE_THREE = 3;//1-3
    ONE_HUNDRED = 4;//1-100
    ZERO_HUNDRED = 5;//0-100
  }
  EventDetail detail = 1;
  string entity = 2;
  RateStyle style = 3;
  string score = 4;
  bool positive = 5;//If the rating should be taken as a positive rating
}

message SignupEvent {
  EventDetail detail = 1;
  fortifi.traffic.CampaignDetails campaign = 2; //e.g. source=advertiser,id=campaign-id,medium=banner
  fortifi.traffic.TrackingDetails tracking = 3;
  string username = 4;
}

message SearchEvent {
  EventDetail detail = 1;
  string term = 2;
  string source = 3;//e.g. page or full url
  fortifi.domain.DomainService service = 4;
}

message ActionEvent {
  EventDetail detail = 1;
  string entity = 2; //e.g. Ticket / Video-ID / google.com
  string action = 3; //e.g. Created / Played / Logged In
}

message BillingAgreementEvent {
  EventDetail detail = 1;
  fortifi.finance.AgreementAction action = 2;
  int64 min_amount = 3;
  int64 max_amount = 4;
  fortifi.finance.PaymentMethod payment_method = 5;
  string payment_method_detail = 6;//e.g. Visa, Mastercard, PayPal
  string name = 7;
  string description = 8;
}

message PurchaseEvent {
  EventDetail detail = 1;
  fortifi.traffic.CampaignDetails campaign = 2; //e.g. source=advertiser,id=campaign-id,medium=banner
  fortifi.traffic.TrackingDetails tracking = 3;
  fortifi.finance.Transaction transaction = 4;
  map<string,fortifi.finance.PurchasedItem> items = 5;
}

message RefundEvent {
  EventDetail detail = 1;
  fortifi.finance.Transaction transaction = 2;
  fortifi.finance.Transaction charge_transaction = 3;
  fortifi.finance.RefundType type = 4;
  string reason = 5;
  fortifi.finance.RefundReason reason_type = 6;
}

message DisputeEvent {
  EventDetail detail = 1;
  fortifi.finance.DisputeStatus status = 2;
  fortifi.finance.Transaction transaction = 3;
  fortifi.finance.DisputeReason reason = 6;
}

message SocialEvent {
  EventDetail detail = 1;
  string network = 2;
  string action = 3; //e.g. Like / Share / Tweet
  string target = 4; //e.g. URL Liked
  string message = 5; //e.g. Tweet Content
}

message EventSubmittedResponse { string event_id = 1; }

service Events { 
  rpc FireViewed(ViewedEvent) returns (EventSubmittedResponse);
  rpc FireOpened(OpenedEvent) returns (EventSubmittedResponse);
  rpc FireImpression(ImpressionEvent) returns (EventSubmittedResponse);
  rpc FireLink(LinkEvent) returns (EventSubmittedResponse);
  rpc FireConversion(ConversionEvent) returns (EventSubmittedResponse);
  rpc FireInstallation(InstallationEvent) returns (EventSubmittedResponse);
  rpc FireCommunication(CommunicationEvent) returns (EventSubmittedResponse);
  rpc FireSubscription(SubscriptionEvent) returns (EventSubmittedResponse);
  rpc FireRateEntity(EntityRateEvent) returns (EventSubmittedResponse);
  rpc FireSignup(SignupEvent) returns (EventSubmittedResponse);
  rpc FireSearch(SearchEvent) returns (EventSubmittedResponse);
  rpc FireAction(ActionEvent) returns (EventSubmittedResponse);
  rpc FireBillingAgreement(BillingAgreementEvent) returns (EventSubmittedResponse);
  rpc FirePurchase(PurchaseEvent) returns (EventSubmittedResponse);
  rpc FireRefund(RefundEvent) returns (EventSubmittedResponse);
  rpc FireDispute(DisputeEvent) returns (EventSubmittedResponse);
  rpc FireSocial(SocialEvent) returns (EventSubmittedResponse);
}